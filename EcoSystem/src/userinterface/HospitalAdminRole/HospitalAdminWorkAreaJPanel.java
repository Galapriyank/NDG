/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HospitalAdminRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.HospitalAdminOrganization;
import Business.Organization.NGOAdminOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.HealthEventWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.NGORole.CreateHealthCampJPanel;
import userinterface.NGORole.HealthEventJPanel;

/**
 *
 * @author Hardik
 */
public class HospitalAdminWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HospitalAdminWorkAreaJPanel
     */
    
    private JPanel userProcessContainer;
    private UserAccount account;
    private Organization organization;
    private EcoSystem business;
    private Enterprise enterprise;
    
    public HospitalAdminWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem business, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.business = business;
        this.enterprise = enterprise;
        populateTable();
    }
    
    public void populateTable(){
        System.out.println("My organization is:"+organization);
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        model.setRowCount(0);
        for (Network network : business.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization organization1 : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if(organization1 instanceof NGOAdminOrganization || organization1 instanceof HospitalAdminOrganization){
                        for(WorkRequest request : organization1.getWorkQueue().getWorkRequestList()){
                            if(request instanceof HealthEventWorkRequest){
                                HealthEventWorkRequest req = (HealthEventWorkRequest) request;
                                Object[] row = new Object[2];
                                    row[0] = req;
                                    row[1] = req.getNgoName();
                                    model.addRow(row);
                                }
                            }
                        }
                    }
                }
            }
        }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        detailsJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        viewApprovedDocJButton = new javax.swing.JButton();
        createDoctorVisit = new javax.swing.JButton();
        Background = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Camp Name", "NGO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 390, 650, 137));

        detailsJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        detailsJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/HospitalAdminRole/details.png"))); // NOI18N
        detailsJButton.setText("Details");
        detailsJButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        detailsJButton.setBorderPainted(false);
        detailsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailsJButtonActionPerformed(evt);
            }
        });
        add(detailsJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 540, 150, 50));

        refreshJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        refreshJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/HospitalAdminRole/refresh.png"))); // NOI18N
        refreshJButton.setText("Refresh");
        refreshJButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        refreshJButton.setBorderPainted(false);
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 540, 160, 50));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/HospitalAdminRole/hospital.png"))); // NOI18N
        jLabel1.setText("NGO Health Checkup Camp Dashboard");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 280, -1, -1));

        viewApprovedDocJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        viewApprovedDocJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/HospitalAdminRole/doc.png"))); // NOI18N
        viewApprovedDocJButton.setText("Approved Dr's.");
        viewApprovedDocJButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        viewApprovedDocJButton.setBorderPainted(false);
        viewApprovedDocJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewApprovedDocJButtonActionPerformed(evt);
            }
        });
        add(viewApprovedDocJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 540, 150, 50));

        createDoctorVisit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/NGORole/camp.png"))); // NOI18N
        createDoctorVisit.setText("Health Event");
        createDoctorVisit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDoctorVisitActionPerformed(evt);
            }
        });
        add(createDoctorVisit, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 540, 160, 50));

        Background.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/SystemAdminWorkArea/background.jpg"))); // NOI18N
        add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void detailsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailsJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Select row from table");
            return;
        }

        HealthEventWorkRequest request = (HealthEventWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);

        //        request.setStatus("Processing");

        PlanningHealthCheckupCampJPanel viewWorkRequestJPanel = new PlanningHealthCheckupCampJPanel(userProcessContainer, request, account, enterprise);
        userProcessContainer.add("viewWorkRequestJPanel", viewWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_detailsJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
                populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void viewApprovedDocJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewApprovedDocJButtonActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Select row from table");
            return;
        }

        HealthEventWorkRequest request = (HealthEventWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);

//        request.setStatus("Processing");

        ViewDoctorsRegisteredJPanel viewApprovedDoctorsJPanel = new ViewDoctorsRegisteredJPanel(userProcessContainer, request, enterprise);
        userProcessContainer.add("viewWorkRequestJPanel", viewApprovedDoctorsJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        // TODO add your handling code here:
    }//GEN-LAST:event_viewApprovedDocJButtonActionPerformed

    private void createDoctorVisitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDoctorVisitActionPerformed
        // TODO add your handling code here:
        CreateHealthCampJPanel createHealthEventJPanel = new CreateHealthCampJPanel(userProcessContainer, account, enterprise);
        userProcessContainer.add("createHealthEventJPanel", createHealthEventJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_createDoctorVisitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JButton createDoctorVisit;
    private javax.swing.JButton detailsJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton viewApprovedDocJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
